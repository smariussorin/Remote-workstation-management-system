//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SystemManagament.Client.WPF.WorkstationMonitorServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoftwareDynamicData", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareDynamic." +
        "Model")]
    [System.SerializableAttribute()]
    public partial class SoftwareDynamicData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsLog[] WindowsLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsProcess[] WindowsProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsService[] WindowsServiceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsLog[] WindowsLog {
            get {
                return this.WindowsLogField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowsLogField, value) != true)) {
                    this.WindowsLogField = value;
                    this.RaisePropertyChanged("WindowsLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsProcess[] WindowsProcess {
            get {
                return this.WindowsProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowsProcessField, value) != true)) {
                    this.WindowsProcessField = value;
                    this.RaisePropertyChanged("WindowsProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsService[] WindowsService {
            get {
                return this.WindowsServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowsServiceField, value) != true)) {
                    this.WindowsServiceField = value;
                    this.RaisePropertyChanged("WindowsService");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowsLog", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareDynamic." +
        "Model.Components")]
    [System.SerializableAttribute()]
    public partial class WindowsLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.EventLogEntryDuplicate[] EntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogDisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MaximumKilobytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MinimumRetentionDaysField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.EventLogEntryDuplicate[] Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntriesField, value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogDisplayName {
            get {
                return this.LogDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogDisplayNameField, value) != true)) {
                    this.LogDisplayNameField = value;
                    this.RaisePropertyChanged("LogDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogName {
            get {
                return this.LogNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogNameField, value) != true)) {
                    this.LogNameField = value;
                    this.RaisePropertyChanged("LogName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MaximumKilobytes {
            get {
                return this.MaximumKilobytesField;
            }
            set {
                if ((this.MaximumKilobytesField.Equals(value) != true)) {
                    this.MaximumKilobytesField = value;
                    this.RaisePropertyChanged("MaximumKilobytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MinimumRetentionDays {
            get {
                return this.MinimumRetentionDaysField;
            }
            set {
                if ((this.MinimumRetentionDaysField.Equals(value) != true)) {
                    this.MinimumRetentionDaysField = value;
                    this.RaisePropertyChanged("MinimumRetentionDays");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowsProcess", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareDynamic." +
        "Model.Components")]
    [System.SerializableAttribute()]
    public partial class WindowsProcess : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BasePriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MemorySizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PagedMemorySize64Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PeakMemorySizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PeakPagedMemorySize64Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PeakVirtualMemorySize64Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TotalProcessorTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue VirtualMemorySize64Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BasePriority {
            get {
                return this.BasePriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.BasePriorityField, value) != true)) {
                    this.BasePriorityField = value;
                    this.RaisePropertyChanged("BasePriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MemorySize {
            get {
                return this.MemorySizeField;
            }
            set {
                if ((this.MemorySizeField.Equals(value) != true)) {
                    this.MemorySizeField = value;
                    this.RaisePropertyChanged("MemorySize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PagedMemorySize64 {
            get {
                return this.PagedMemorySize64Field;
            }
            set {
                if ((this.PagedMemorySize64Field.Equals(value) != true)) {
                    this.PagedMemorySize64Field = value;
                    this.RaisePropertyChanged("PagedMemorySize64");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PeakMemorySize {
            get {
                return this.PeakMemorySizeField;
            }
            set {
                if ((this.PeakMemorySizeField.Equals(value) != true)) {
                    this.PeakMemorySizeField = value;
                    this.RaisePropertyChanged("PeakMemorySize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PeakPagedMemorySize64 {
            get {
                return this.PeakPagedMemorySize64Field;
            }
            set {
                if ((this.PeakPagedMemorySize64Field.Equals(value) != true)) {
                    this.PeakPagedMemorySize64Field = value;
                    this.RaisePropertyChanged("PeakPagedMemorySize64");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PeakVirtualMemorySize64 {
            get {
                return this.PeakVirtualMemorySize64Field;
            }
            set {
                if ((this.PeakVirtualMemorySize64Field.Equals(value) != true)) {
                    this.PeakVirtualMemorySize64Field = value;
                    this.RaisePropertyChanged("PeakVirtualMemorySize64");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TotalProcessorTime {
            get {
                return this.TotalProcessorTimeField;
            }
            set {
                if ((this.TotalProcessorTimeField.Equals(value) != true)) {
                    this.TotalProcessorTimeField = value;
                    this.RaisePropertyChanged("TotalProcessorTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue VirtualMemorySize64 {
            get {
                return this.VirtualMemorySize64Field;
            }
            set {
                if ((this.VirtualMemorySize64Field.Equals(value) != true)) {
                    this.VirtualMemorySize64Field = value;
                    this.RaisePropertyChanged("VirtualMemorySize64");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowsService", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareDynamic." +
        "Model.Components")]
    [System.SerializableAttribute()]
    public partial class WindowsService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CanPauseAndContinueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CanShutdownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CanStopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CanPauseAndContinue {
            get {
                return this.CanPauseAndContinueField;
            }
            set {
                if ((object.ReferenceEquals(this.CanPauseAndContinueField, value) != true)) {
                    this.CanPauseAndContinueField = value;
                    this.RaisePropertyChanged("CanPauseAndContinue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CanShutdown {
            get {
                return this.CanShutdownField;
            }
            set {
                if ((object.ReferenceEquals(this.CanShutdownField, value) != true)) {
                    this.CanShutdownField = value;
                    this.RaisePropertyChanged("CanShutdown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CanStop {
            get {
                return this.CanStopField;
            }
            set {
                if ((object.ReferenceEquals(this.CanStopField, value) != true)) {
                    this.CanStopField = value;
                    this.RaisePropertyChanged("CanStop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeField, value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartType {
            get {
                return this.StartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTypeField, value) != true)) {
                    this.StartTypeField = value;
                    this.RaisePropertyChanged("StartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitValue", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.CustomProperties")]
    [System.SerializableAttribute()]
    public partial struct UnitValue : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventLogEntryDuplicate", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareDynamic." +
        "Model.Components")]
    [System.SerializableAttribute()]
    public partial class EventLogEntryDuplicate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CategoryNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.EventLogEntryTypeDuplicate EntryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstanceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ReplacementStringsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeGeneratedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeWrittenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CategoryNumber {
            get {
                return this.CategoryNumberField;
            }
            set {
                if ((this.CategoryNumberField.Equals(value) != true)) {
                    this.CategoryNumberField = value;
                    this.RaisePropertyChanged("CategoryNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.EventLogEntryTypeDuplicate EntryType {
            get {
                return this.EntryTypeField;
            }
            set {
                if ((this.EntryTypeField.Equals(value) != true)) {
                    this.EntryTypeField = value;
                    this.RaisePropertyChanged("EntryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstanceId {
            get {
                return this.InstanceIdField;
            }
            set {
                if ((this.InstanceIdField.Equals(value) != true)) {
                    this.InstanceIdField = value;
                    this.RaisePropertyChanged("InstanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineName {
            get {
                return this.MachineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineNameField, value) != true)) {
                    this.MachineNameField = value;
                    this.RaisePropertyChanged("MachineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ReplacementStrings {
            get {
                return this.ReplacementStringsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplacementStringsField, value) != true)) {
                    this.ReplacementStringsField = value;
                    this.RaisePropertyChanged("ReplacementStrings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeGenerated {
            get {
                return this.TimeGeneratedField;
            }
            set {
                if ((this.TimeGeneratedField.Equals(value) != true)) {
                    this.TimeGeneratedField = value;
                    this.RaisePropertyChanged("TimeGenerated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeWritten {
            get {
                return this.TimeWrittenField;
            }
            set {
                if ((this.TimeWrittenField.Equals(value) != true)) {
                    this.TimeWrittenField = value;
                    this.RaisePropertyChanged("TimeWritten");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventLogEntryTypeDuplicate", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareDynamic." +
        "Model.Components.Duplicate")]
    public enum EventLogEntryTypeDuplicate : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessAudit = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailureAudit = 16,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoftwareStaticData", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel")]
    [System.SerializableAttribute()]
    public partial class SoftwareStaticData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Bios[] BiosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.CurrentUser[] CurrentUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.InstalledProgram[] InstalledProgramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.LocalUser[] LocalUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.MicrosoftWindowsUpdate[] MicrosoftWindowsUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.OS[] OperatingSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.StartupCommand[] StartupCommandField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Bios[] Bios {
            get {
                return this.BiosField;
            }
            set {
                if ((object.ReferenceEquals(this.BiosField, value) != true)) {
                    this.BiosField = value;
                    this.RaisePropertyChanged("Bios");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.CurrentUser[] CurrentUser {
            get {
                return this.CurrentUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentUserField, value) != true)) {
                    this.CurrentUserField = value;
                    this.RaisePropertyChanged("CurrentUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.InstalledProgram[] InstalledProgram {
            get {
                return this.InstalledProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.InstalledProgramField, value) != true)) {
                    this.InstalledProgramField = value;
                    this.RaisePropertyChanged("InstalledProgram");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.LocalUser[] LocalUser {
            get {
                return this.LocalUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalUserField, value) != true)) {
                    this.LocalUserField = value;
                    this.RaisePropertyChanged("LocalUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.MicrosoftWindowsUpdate[] MicrosoftWindowsUpdate {
            get {
                return this.MicrosoftWindowsUpdateField;
            }
            set {
                if ((object.ReferenceEquals(this.MicrosoftWindowsUpdateField, value) != true)) {
                    this.MicrosoftWindowsUpdateField = value;
                    this.RaisePropertyChanged("MicrosoftWindowsUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.OS[] OperatingSystem {
            get {
                return this.OperatingSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatingSystemField, value) != true)) {
                    this.OperatingSystemField = value;
                    this.RaisePropertyChanged("OperatingSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.StartupCommand[] StartupCommand {
            get {
                return this.StartupCommandField;
            }
            set {
                if ((object.ReferenceEquals(this.StartupCommandField, value) != true)) {
                    this.StartupCommandField = value;
                    this.RaisePropertyChanged("StartupCommand");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bios", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class Bios : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BIOSVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmbeddedControllerMajorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmbeddedControllerMinorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SMBIOSBIOSVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SMBIOSMajorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SMBIOSMinorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SMBIOSPresentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemBiosMajorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemBiosMinorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BIOSVersion {
            get {
                return this.BIOSVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.BIOSVersionField, value) != true)) {
                    this.BIOSVersionField = value;
                    this.RaisePropertyChanged("BIOSVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildNumber {
            get {
                return this.BuildNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildNumberField, value) != true)) {
                    this.BuildNumberField = value;
                    this.RaisePropertyChanged("BuildNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmbeddedControllerMajorVersion {
            get {
                return this.EmbeddedControllerMajorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.EmbeddedControllerMajorVersionField, value) != true)) {
                    this.EmbeddedControllerMajorVersionField = value;
                    this.RaisePropertyChanged("EmbeddedControllerMajorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmbeddedControllerMinorVersion {
            get {
                return this.EmbeddedControllerMinorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.EmbeddedControllerMinorVersionField, value) != true)) {
                    this.EmbeddedControllerMinorVersionField = value;
                    this.RaisePropertyChanged("EmbeddedControllerMinorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMBIOSBIOSVersion {
            get {
                return this.SMBIOSBIOSVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SMBIOSBIOSVersionField, value) != true)) {
                    this.SMBIOSBIOSVersionField = value;
                    this.RaisePropertyChanged("SMBIOSBIOSVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMBIOSMajorVersion {
            get {
                return this.SMBIOSMajorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SMBIOSMajorVersionField, value) != true)) {
                    this.SMBIOSMajorVersionField = value;
                    this.RaisePropertyChanged("SMBIOSMajorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMBIOSMinorVersion {
            get {
                return this.SMBIOSMinorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SMBIOSMinorVersionField, value) != true)) {
                    this.SMBIOSMinorVersionField = value;
                    this.RaisePropertyChanged("SMBIOSMinorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMBIOSPresent {
            get {
                return this.SMBIOSPresentField;
            }
            set {
                if ((object.ReferenceEquals(this.SMBIOSPresentField, value) != true)) {
                    this.SMBIOSPresentField = value;
                    this.RaisePropertyChanged("SMBIOSPresent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemBiosMajorVersion {
            get {
                return this.SystemBiosMajorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemBiosMajorVersionField, value) != true)) {
                    this.SystemBiosMajorVersionField = value;
                    this.RaisePropertyChanged("SystemBiosMajorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemBiosMinorVersion {
            get {
                return this.SystemBiosMinorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemBiosMinorVersionField, value) != true)) {
                    this.SystemBiosMinorVersionField = value;
                    this.RaisePropertyChanged("SystemBiosMinorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrentUser", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class CurrentUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthenticationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.ClaimDuplicate[] ClaimsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.GroupDuplicate[] GroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthenticationType {
            get {
                return this.AuthenticationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticationTypeField, value) != true)) {
                    this.AuthenticationTypeField = value;
                    this.RaisePropertyChanged("AuthenticationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.ClaimDuplicate[] Claims {
            get {
                return this.ClaimsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimsField, value) != true)) {
                    this.ClaimsField = value;
                    this.RaisePropertyChanged("Claims");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.GroupDuplicate[] Groups {
            get {
                return this.GroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupsField, value) != true)) {
                    this.GroupsField = value;
                    this.RaisePropertyChanged("Groups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstalledProgram", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class InstalledProgram : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InstallDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InstallDate {
            get {
                return this.InstallDateField;
            }
            set {
                if ((this.InstallDateField.Equals(value) != true)) {
                    this.InstallDateField = value;
                    this.RaisePropertyChanged("InstallDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallLocation {
            get {
                return this.InstallLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallLocationField, value) != true)) {
                    this.InstallLocationField = value;
                    this.RaisePropertyChanged("InstallLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalUser", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class LocalUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescritptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordChangeableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordExpiresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SIDTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descritption {
            get {
                return this.DescritptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescritptionField, value) != true)) {
                    this.DescritptionField = value;
                    this.RaisePropertyChanged("Descritption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordChangeable {
            get {
                return this.PasswordChangeableField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordChangeableField, value) != true)) {
                    this.PasswordChangeableField = value;
                    this.RaisePropertyChanged("PasswordChangeable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordExpires {
            get {
                return this.PasswordExpiresField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordExpiresField, value) != true)) {
                    this.PasswordExpiresField = value;
                    this.RaisePropertyChanged("PasswordExpires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordRequired {
            get {
                return this.PasswordRequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordRequiredField, value) != true)) {
                    this.PasswordRequiredField = value;
                    this.RaisePropertyChanged("PasswordRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SID {
            get {
                return this.SIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SIDField, value) != true)) {
                    this.SIDField = value;
                    this.RaisePropertyChanged("SID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SIDType {
            get {
                return this.SIDTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SIDTypeField, value) != true)) {
                    this.SIDTypeField = value;
                    this.RaisePropertyChanged("SIDType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MicrosoftWindowsUpdate", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class MicrosoftWindowsUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FixCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HotFixIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InstallDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstalledByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InstalledOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServicePackInEffectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSName {
            get {
                return this.CSNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CSNameField, value) != true)) {
                    this.CSNameField = value;
                    this.RaisePropertyChanged("CSName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FixComments {
            get {
                return this.FixCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.FixCommentsField, value) != true)) {
                    this.FixCommentsField = value;
                    this.RaisePropertyChanged("FixComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HotFixID {
            get {
                return this.HotFixIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HotFixIDField, value) != true)) {
                    this.HotFixIDField = value;
                    this.RaisePropertyChanged("HotFixID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InstallDate {
            get {
                return this.InstallDateField;
            }
            set {
                if ((this.InstallDateField.Equals(value) != true)) {
                    this.InstallDateField = value;
                    this.RaisePropertyChanged("InstallDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstalledBy {
            get {
                return this.InstalledByField;
            }
            set {
                if ((object.ReferenceEquals(this.InstalledByField, value) != true)) {
                    this.InstalledByField = value;
                    this.RaisePropertyChanged("InstalledBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InstalledOn {
            get {
                return this.InstalledOnField;
            }
            set {
                if ((this.InstalledOnField.Equals(value) != true)) {
                    this.InstalledOnField = value;
                    this.RaisePropertyChanged("InstalledOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServicePackInEffect {
            get {
                return this.ServicePackInEffectField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicePackInEffectField, value) != true)) {
                    this.ServicePackInEffectField = value;
                    this.RaisePropertyChanged("ServicePackInEffect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OS", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class OS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CDSVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue CurrentTimeZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue EncryptionLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InstallDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastBootUpTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LocalDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaxNumerOfProcessesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MaxProcessMemorySizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OSArchitectureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegisteredUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServicePackMajorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServicePackMinorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemDirectoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemDriveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindowsDirectoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildNumber {
            get {
                return this.BuildNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildNumberField, value) != true)) {
                    this.BuildNumberField = value;
                    this.RaisePropertyChanged("BuildNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildType {
            get {
                return this.BuildTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildTypeField, value) != true)) {
                    this.BuildTypeField = value;
                    this.RaisePropertyChanged("BuildType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CDSVersion {
            get {
                return this.CDSVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CDSVersionField, value) != true)) {
                    this.CDSVersionField = value;
                    this.RaisePropertyChanged("CDSVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSName {
            get {
                return this.CSNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CSNameField, value) != true)) {
                    this.CSNameField = value;
                    this.RaisePropertyChanged("CSName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue CurrentTimeZone {
            get {
                return this.CurrentTimeZoneField;
            }
            set {
                if ((this.CurrentTimeZoneField.Equals(value) != true)) {
                    this.CurrentTimeZoneField = value;
                    this.RaisePropertyChanged("CurrentTimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue EncryptionLevel {
            get {
                return this.EncryptionLevelField;
            }
            set {
                if ((this.EncryptionLevelField.Equals(value) != true)) {
                    this.EncryptionLevelField = value;
                    this.RaisePropertyChanged("EncryptionLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InstallDate {
            get {
                return this.InstallDateField;
            }
            set {
                if ((this.InstallDateField.Equals(value) != true)) {
                    this.InstallDateField = value;
                    this.RaisePropertyChanged("InstallDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastBootUpTime {
            get {
                return this.LastBootUpTimeField;
            }
            set {
                if ((this.LastBootUpTimeField.Equals(value) != true)) {
                    this.LastBootUpTimeField = value;
                    this.RaisePropertyChanged("LastBootUpTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LocalDateTime {
            get {
                return this.LocalDateTimeField;
            }
            set {
                if ((this.LocalDateTimeField.Equals(value) != true)) {
                    this.LocalDateTimeField = value;
                    this.RaisePropertyChanged("LocalDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locale {
            get {
                return this.LocaleField;
            }
            set {
                if ((object.ReferenceEquals(this.LocaleField, value) != true)) {
                    this.LocaleField = value;
                    this.RaisePropertyChanged("Locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxNumerOfProcesses {
            get {
                return this.MaxNumerOfProcessesField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxNumerOfProcessesField, value) != true)) {
                    this.MaxNumerOfProcessesField = value;
                    this.RaisePropertyChanged("MaxNumerOfProcesses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MaxProcessMemorySize {
            get {
                return this.MaxProcessMemorySizeField;
            }
            set {
                if ((this.MaxProcessMemorySizeField.Equals(value) != true)) {
                    this.MaxProcessMemorySizeField = value;
                    this.RaisePropertyChanged("MaxProcessMemorySize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OSArchitecture {
            get {
                return this.OSArchitectureField;
            }
            set {
                if ((object.ReferenceEquals(this.OSArchitectureField, value) != true)) {
                    this.OSArchitectureField = value;
                    this.RaisePropertyChanged("OSArchitecture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organization {
            get {
                return this.OrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationField, value) != true)) {
                    this.OrganizationField = value;
                    this.RaisePropertyChanged("Organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegisteredUser {
            get {
                return this.RegisteredUserField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisteredUserField, value) != true)) {
                    this.RegisteredUserField = value;
                    this.RaisePropertyChanged("RegisteredUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServicePackMajorVersion {
            get {
                return this.ServicePackMajorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicePackMajorVersionField, value) != true)) {
                    this.ServicePackMajorVersionField = value;
                    this.RaisePropertyChanged("ServicePackMajorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServicePackMinorVersion {
            get {
                return this.ServicePackMinorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicePackMinorVersionField, value) != true)) {
                    this.ServicePackMinorVersionField = value;
                    this.RaisePropertyChanged("ServicePackMinorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemDirectory {
            get {
                return this.SystemDirectoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemDirectoryField, value) != true)) {
                    this.SystemDirectoryField = value;
                    this.RaisePropertyChanged("SystemDirectory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemDrive {
            get {
                return this.SystemDriveField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemDriveField, value) != true)) {
                    this.SystemDriveField = value;
                    this.RaisePropertyChanged("SystemDrive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindowsDirectory {
            get {
                return this.WindowsDirectoryField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowsDirectoryField, value) != true)) {
                    this.WindowsDirectoryField = value;
                    this.RaisePropertyChanged("WindowsDirectory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StartupCommand", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class StartupCommand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SettingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserSIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Command {
            get {
                return this.CommandField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandField, value) != true)) {
                    this.CommandField = value;
                    this.RaisePropertyChanged("Command");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettingID {
            get {
                return this.SettingIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingIDField, value) != true)) {
                    this.SettingIDField = value;
                    this.RaisePropertyChanged("SettingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserSID {
            get {
                return this.UserSIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSIDField, value) != true)) {
                    this.UserSIDField = value;
                    this.RaisePropertyChanged("UserSID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClaimDuplicate", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components.Duplicate")]
    [System.SerializableAttribute()]
    public partial class ClaimDuplicate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalIssuerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Issuer {
            get {
                return this.IssuerField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuerField, value) != true)) {
                    this.IssuerField = value;
                    this.RaisePropertyChanged("Issuer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalIssuer {
            get {
                return this.OriginalIssuerField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalIssuerField, value) != true)) {
                    this.OriginalIssuerField = value;
                    this.RaisePropertyChanged("OriginalIssuer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueType {
            get {
                return this.ValueTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueTypeField, value) != true)) {
                    this.ValueTypeField = value;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupDuplicate", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components.Duplicate")]
    [System.SerializableAttribute()]
    public partial class GroupDuplicate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HardwareDynamicData", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareDynamic." +
        "Model")]
    [System.SerializableAttribute()]
    public partial class HardwareDynamicData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.DiskDynamic[] DiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.MainBoardDynamic[] MainBoardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.MemoryDynamic[] MemoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.ProcessorDynamic[] ProcessorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.VideoControllerDynamic[] VideoControllerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.DiskDynamic[] Disk {
            get {
                return this.DiskField;
            }
            set {
                if ((object.ReferenceEquals(this.DiskField, value) != true)) {
                    this.DiskField = value;
                    this.RaisePropertyChanged("Disk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.MainBoardDynamic[] MainBoard {
            get {
                return this.MainBoardField;
            }
            set {
                if ((object.ReferenceEquals(this.MainBoardField, value) != true)) {
                    this.MainBoardField = value;
                    this.RaisePropertyChanged("MainBoard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.MemoryDynamic[] Memory {
            get {
                return this.MemoryField;
            }
            set {
                if ((object.ReferenceEquals(this.MemoryField, value) != true)) {
                    this.MemoryField = value;
                    this.RaisePropertyChanged("Memory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.ProcessorDynamic[] Processor {
            get {
                return this.ProcessorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessorField, value) != true)) {
                    this.ProcessorField = value;
                    this.RaisePropertyChanged("Processor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.VideoControllerDynamic[] VideoController {
            get {
                return this.VideoControllerField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoControllerField, value) != true)) {
                    this.VideoControllerField = value;
                    this.RaisePropertyChanged("VideoController");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiskDynamic", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareDynamic." +
        "Model.Components")]
    [System.SerializableAttribute()]
    public partial class DiskDynamic : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareDynamicComponent {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MainBoardDynamic", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareDynamic." +
        "Model.Components")]
    [System.SerializableAttribute()]
    public partial class MainBoardDynamic : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareDynamicComponent {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemoryDynamic", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareDynamic." +
        "Model.Components")]
    [System.SerializableAttribute()]
    public partial class MemoryDynamic : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareDynamicComponent {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessorDynamic", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareDynamic." +
        "Model.Components")]
    [System.SerializableAttribute()]
    public partial class ProcessorDynamic : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareDynamicComponent {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VideoControllerDynamic", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareDynamic." +
        "Model.Components")]
    [System.SerializableAttribute()]
    public partial class VideoControllerDynamic : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareDynamicComponent {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HardwareDynamicComponent", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareDynamic." +
        "Model.Components.Abstract")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.MainBoardDynamic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.MemoryDynamic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.ProcessorDynamic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.VideoControllerDynamic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.DiskDynamic))]
    public partial class HardwareDynamicComponent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] ClockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] ControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] FanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] LoadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] PowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] VoltageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] Clock {
            get {
                return this.ClockField;
            }
            set {
                if ((object.ReferenceEquals(this.ClockField, value) != true)) {
                    this.ClockField = value;
                    this.RaisePropertyChanged("Clock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] Control {
            get {
                return this.ControlField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlField, value) != true)) {
                    this.ControlField = value;
                    this.RaisePropertyChanged("Control");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] Fan {
            get {
                return this.FanField;
            }
            set {
                if ((object.ReferenceEquals(this.FanField, value) != true)) {
                    this.FanField = value;
                    this.RaisePropertyChanged("Fan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] Load {
            get {
                return this.LoadField;
            }
            set {
                if ((object.ReferenceEquals(this.LoadField, value) != true)) {
                    this.LoadField = value;
                    this.RaisePropertyChanged("Load");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] Power {
            get {
                return this.PowerField;
            }
            set {
                if ((object.ReferenceEquals(this.PowerField, value) != true)) {
                    this.PowerField = value;
                    this.RaisePropertyChanged("Power");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.TemperatureField, value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Sensor[] Voltage {
            get {
                return this.VoltageField;
            }
            set {
                if ((object.ReferenceEquals(this.VoltageField, value) != true)) {
                    this.VoltageField = value;
                    this.RaisePropertyChanged("Voltage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sensor", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareDynamic." +
        "Model.CustomProperties")]
    [System.SerializableAttribute()]
    public partial class Sensor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaxValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxValue {
            get {
                return this.MaxValueField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxValueField, value) != true)) {
                    this.MaxValueField = value;
                    this.RaisePropertyChanged("MaxValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinValue {
            get {
                return this.MinValueField;
            }
            set {
                if ((object.ReferenceEquals(this.MinValueField, value) != true)) {
                    this.MinValueField = value;
                    this.RaisePropertyChanged("MinValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorName {
            get {
                return this.SensorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorNameField, value) != true)) {
                    this.SensorNameField = value;
                    this.RaisePropertyChanged("SensorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorType {
            get {
                return this.SensorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorTypeField, value) != true)) {
                    this.SensorTypeField = value;
                    this.RaisePropertyChanged("SensorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HardwareStaticData", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel")]
    [System.SerializableAttribute()]
    public partial class HardwareStaticData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.BaseBoard[] BaseBoardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Battery[] BatteryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.CDROMDrive[] CDROMDriveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Fan[] FanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Memory[] MemoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.NetworkAdapter[] NetworkAdapterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.PnPEntity[] PnPEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Printer[] PrinterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.ProcessorStatic[] ProcessorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.ProcessorCache[] ProcessorCacheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SMARTData[] SMARTDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Storage[] StorageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.VideoController[] VideoControllerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.BaseBoard[] BaseBoard {
            get {
                return this.BaseBoardField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseBoardField, value) != true)) {
                    this.BaseBoardField = value;
                    this.RaisePropertyChanged("BaseBoard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Battery[] Battery {
            get {
                return this.BatteryField;
            }
            set {
                if ((object.ReferenceEquals(this.BatteryField, value) != true)) {
                    this.BatteryField = value;
                    this.RaisePropertyChanged("Battery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.CDROMDrive[] CDROMDrive {
            get {
                return this.CDROMDriveField;
            }
            set {
                if ((object.ReferenceEquals(this.CDROMDriveField, value) != true)) {
                    this.CDROMDriveField = value;
                    this.RaisePropertyChanged("CDROMDrive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Fan[] Fan {
            get {
                return this.FanField;
            }
            set {
                if ((object.ReferenceEquals(this.FanField, value) != true)) {
                    this.FanField = value;
                    this.RaisePropertyChanged("Fan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Memory[] Memory {
            get {
                return this.MemoryField;
            }
            set {
                if ((object.ReferenceEquals(this.MemoryField, value) != true)) {
                    this.MemoryField = value;
                    this.RaisePropertyChanged("Memory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.NetworkAdapter[] NetworkAdapter {
            get {
                return this.NetworkAdapterField;
            }
            set {
                if ((object.ReferenceEquals(this.NetworkAdapterField, value) != true)) {
                    this.NetworkAdapterField = value;
                    this.RaisePropertyChanged("NetworkAdapter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.PnPEntity[] PnPEntity {
            get {
                return this.PnPEntityField;
            }
            set {
                if ((object.ReferenceEquals(this.PnPEntityField, value) != true)) {
                    this.PnPEntityField = value;
                    this.RaisePropertyChanged("PnPEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Printer[] Printer {
            get {
                return this.PrinterField;
            }
            set {
                if ((object.ReferenceEquals(this.PrinterField, value) != true)) {
                    this.PrinterField = value;
                    this.RaisePropertyChanged("Printer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.ProcessorStatic[] Processor {
            get {
                return this.ProcessorField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessorField, value) != true)) {
                    this.ProcessorField = value;
                    this.RaisePropertyChanged("Processor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.ProcessorCache[] ProcessorCache {
            get {
                return this.ProcessorCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessorCacheField, value) != true)) {
                    this.ProcessorCacheField = value;
                    this.RaisePropertyChanged("ProcessorCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SMARTData[] SMARTData {
            get {
                return this.SMARTDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SMARTDataField, value) != true)) {
                    this.SMARTDataField = value;
                    this.RaisePropertyChanged("SMARTData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Storage[] Storage {
            get {
                return this.StorageField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageField, value) != true)) {
                    this.StorageField = value;
                    this.RaisePropertyChanged("Storage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.VideoController[] VideoController {
            get {
                return this.VideoControllerField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoControllerField, value) != true)) {
                    this.VideoControllerField = value;
                    this.RaisePropertyChanged("VideoController");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseBoard", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class BaseBoard : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticComponent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumber {
            get {
                return this.PartNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumberField, value) != true)) {
                    this.PartNumberField = value;
                    this.RaisePropertyChanged("PartNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Battery", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class Battery : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticComponent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatteryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue DesignCapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue FullChargeCapacityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatteryStatus {
            get {
                return this.BatteryStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.BatteryStatusField, value) != true)) {
                    this.BatteryStatusField = value;
                    this.RaisePropertyChanged("BatteryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue DesignCapacity {
            get {
                return this.DesignCapacityField;
            }
            set {
                if ((this.DesignCapacityField.Equals(value) != true)) {
                    this.DesignCapacityField = value;
                    this.RaisePropertyChanged("DesignCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIDField, value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue FullChargeCapacity {
            get {
                return this.FullChargeCapacityField;
            }
            set {
                if ((this.FullChargeCapacityField.Equals(value) != true)) {
                    this.FullChargeCapacityField = value;
                    this.RaisePropertyChanged("FullChargeCapacity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CDROMDrive", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class CDROMDrive : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticComponent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MediaTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIDField, value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Drive {
            get {
                return this.DriveField;
            }
            set {
                if ((object.ReferenceEquals(this.DriveField, value) != true)) {
                    this.DriveField = value;
                    this.RaisePropertyChanged("Drive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediaType {
            get {
                return this.MediaTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaTypeField, value) != true)) {
                    this.MediaTypeField = value;
                    this.RaisePropertyChanged("MediaType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fan", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class Fan : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticComponent {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Memory", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class Memory : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticComponent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue ConfiguredClockSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue ConfiguredVoltageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue DataWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceLocatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MaxVoltageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemoryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MinVoltageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue TotalWidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankLabel {
            get {
                return this.BankLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.BankLabelField, value) != true)) {
                    this.BankLabelField = value;
                    this.RaisePropertyChanged("BankLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue ConfiguredClockSpeed {
            get {
                return this.ConfiguredClockSpeedField;
            }
            set {
                if ((this.ConfiguredClockSpeedField.Equals(value) != true)) {
                    this.ConfiguredClockSpeedField = value;
                    this.RaisePropertyChanged("ConfiguredClockSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue ConfiguredVoltage {
            get {
                return this.ConfiguredVoltageField;
            }
            set {
                if ((this.ConfiguredVoltageField.Equals(value) != true)) {
                    this.ConfiguredVoltageField = value;
                    this.RaisePropertyChanged("ConfiguredVoltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue DataWidth {
            get {
                return this.DataWidthField;
            }
            set {
                if ((this.DataWidthField.Equals(value) != true)) {
                    this.DataWidthField = value;
                    this.RaisePropertyChanged("DataWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceLocator {
            get {
                return this.DeviceLocatorField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceLocatorField, value) != true)) {
                    this.DeviceLocatorField = value;
                    this.RaisePropertyChanged("DeviceLocator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MaxVoltage {
            get {
                return this.MaxVoltageField;
            }
            set {
                if ((this.MaxVoltageField.Equals(value) != true)) {
                    this.MaxVoltageField = value;
                    this.RaisePropertyChanged("MaxVoltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemoryType {
            get {
                return this.MemoryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MemoryTypeField, value) != true)) {
                    this.MemoryTypeField = value;
                    this.RaisePropertyChanged("MemoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MinVoltage {
            get {
                return this.MinVoltageField;
            }
            set {
                if ((this.MinVoltageField.Equals(value) != true)) {
                    this.MinVoltageField = value;
                    this.RaisePropertyChanged("MinVoltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumber {
            get {
                return this.PartNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumberField, value) != true)) {
                    this.PartNumberField = value;
                    this.RaisePropertyChanged("PartNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue TotalWidth {
            get {
                return this.TotalWidthField;
            }
            set {
                if ((this.TotalWidthField.Equals(value) != true)) {
                    this.TotalWidthField = value;
                    this.RaisePropertyChanged("TotalWidth");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NetworkAdapter", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class NetworkAdapter : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticComponent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue ActiveMaximumTransmissionUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectorPresentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverVersionStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterfaceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterfaceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NdisMediumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NdisPhysicalMediumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermanentAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VirtualField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue ActiveMaximumTransmissionUnit {
            get {
                return this.ActiveMaximumTransmissionUnitField;
            }
            set {
                if ((this.ActiveMaximumTransmissionUnitField.Equals(value) != true)) {
                    this.ActiveMaximumTransmissionUnitField = value;
                    this.RaisePropertyChanged("ActiveMaximumTransmissionUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComponentID {
            get {
                return this.ComponentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentIDField, value) != true)) {
                    this.ComponentIDField = value;
                    this.RaisePropertyChanged("ComponentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectorPresent {
            get {
                return this.ConnectorPresentField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectorPresentField, value) != true)) {
                    this.ConnectorPresentField = value;
                    this.RaisePropertyChanged("ConnectorPresent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIDField, value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverDate {
            get {
                return this.DriverDateField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverDateField, value) != true)) {
                    this.DriverDateField = value;
                    this.RaisePropertyChanged("DriverDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverDescription {
            get {
                return this.DriverDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverDescriptionField, value) != true)) {
                    this.DriverDescriptionField = value;
                    this.RaisePropertyChanged("DriverDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverName {
            get {
                return this.DriverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverNameField, value) != true)) {
                    this.DriverNameField = value;
                    this.RaisePropertyChanged("DriverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverProvider {
            get {
                return this.DriverProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverProviderField, value) != true)) {
                    this.DriverProviderField = value;
                    this.RaisePropertyChanged("DriverProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverVersionString {
            get {
                return this.DriverVersionStringField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverVersionStringField, value) != true)) {
                    this.DriverVersionStringField = value;
                    this.RaisePropertyChanged("DriverVersionString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterfaceDescription {
            get {
                return this.InterfaceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InterfaceDescriptionField, value) != true)) {
                    this.InterfaceDescriptionField = value;
                    this.RaisePropertyChanged("InterfaceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterfaceName {
            get {
                return this.InterfaceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InterfaceNameField, value) != true)) {
                    this.InterfaceNameField = value;
                    this.RaisePropertyChanged("InterfaceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NdisMedium {
            get {
                return this.NdisMediumField;
            }
            set {
                if ((object.ReferenceEquals(this.NdisMediumField, value) != true)) {
                    this.NdisMediumField = value;
                    this.RaisePropertyChanged("NdisMedium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NdisPhysicalMedium {
            get {
                return this.NdisPhysicalMediumField;
            }
            set {
                if ((object.ReferenceEquals(this.NdisPhysicalMediumField, value) != true)) {
                    this.NdisPhysicalMediumField = value;
                    this.RaisePropertyChanged("NdisPhysicalMedium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentAddress {
            get {
                return this.PermanentAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PermanentAddressField, value) != true)) {
                    this.PermanentAddressField = value;
                    this.RaisePropertyChanged("PermanentAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Virtual {
            get {
                return this.VirtualField;
            }
            set {
                if ((object.ReferenceEquals(this.VirtualField, value) != true)) {
                    this.VirtualField = value;
                    this.RaisePropertyChanged("Virtual");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PnPEntity", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class PnPEntity : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticComponent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIDField, value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Printer", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class Printer : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticComponent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AveragePagesPerMinuteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrintProcessorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AveragePagesPerMinute {
            get {
                return this.AveragePagesPerMinuteField;
            }
            set {
                if ((object.ReferenceEquals(this.AveragePagesPerMinuteField, value) != true)) {
                    this.AveragePagesPerMinuteField = value;
                    this.RaisePropertyChanged("AveragePagesPerMinute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Default {
            get {
                return this.DefaultField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultField, value) != true)) {
                    this.DefaultField = value;
                    this.RaisePropertyChanged("Default");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIDField, value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortName {
            get {
                return this.PortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PortNameField, value) != true)) {
                    this.PortNameField = value;
                    this.RaisePropertyChanged("PortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrintProcessor {
            get {
                return this.PrintProcessorField;
            }
            set {
                if ((object.ReferenceEquals(this.PrintProcessorField, value) != true)) {
                    this.PrintProcessorField = value;
                    this.RaisePropertyChanged("PrintProcessor");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessorStatic", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class ProcessorStatic : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticComponent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue AddressWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArchitectureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue BusSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue DataWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MaxClockSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberOfCoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberOfLogicalProcessorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocketDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SteppingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThreadCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue AddressWidth {
            get {
                return this.AddressWidthField;
            }
            set {
                if ((this.AddressWidthField.Equals(value) != true)) {
                    this.AddressWidthField = value;
                    this.RaisePropertyChanged("AddressWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Architecture {
            get {
                return this.ArchitectureField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchitectureField, value) != true)) {
                    this.ArchitectureField = value;
                    this.RaisePropertyChanged("Architecture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue BusSpeed {
            get {
                return this.BusSpeedField;
            }
            set {
                if ((this.BusSpeedField.Equals(value) != true)) {
                    this.BusSpeedField = value;
                    this.RaisePropertyChanged("BusSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue DataWidth {
            get {
                return this.DataWidthField;
            }
            set {
                if ((this.DataWidthField.Equals(value) != true)) {
                    this.DataWidthField = value;
                    this.RaisePropertyChanged("DataWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MaxClockSpeed {
            get {
                return this.MaxClockSpeedField;
            }
            set {
                if ((this.MaxClockSpeedField.Equals(value) != true)) {
                    this.MaxClockSpeedField = value;
                    this.RaisePropertyChanged("MaxClockSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOfCores {
            get {
                return this.NumberOfCoresField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberOfCoresField, value) != true)) {
                    this.NumberOfCoresField = value;
                    this.RaisePropertyChanged("NumberOfCores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOfLogicalProcessors {
            get {
                return this.NumberOfLogicalProcessorsField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberOfLogicalProcessorsField, value) != true)) {
                    this.NumberOfLogicalProcessorsField = value;
                    this.RaisePropertyChanged("NumberOfLogicalProcessors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessorID {
            get {
                return this.ProcessorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessorIDField, value) != true)) {
                    this.ProcessorIDField = value;
                    this.RaisePropertyChanged("ProcessorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SocketDesignation {
            get {
                return this.SocketDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.SocketDesignationField, value) != true)) {
                    this.SocketDesignationField = value;
                    this.RaisePropertyChanged("SocketDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stepping {
            get {
                return this.SteppingField;
            }
            set {
                if ((object.ReferenceEquals(this.SteppingField, value) != true)) {
                    this.SteppingField = value;
                    this.RaisePropertyChanged("Stepping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThreadCount {
            get {
                return this.ThreadCountField;
            }
            set {
                if ((object.ReferenceEquals(this.ThreadCountField, value) != true)) {
                    this.ThreadCountField = value;
                    this.RaisePropertyChanged("ThreadCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueIdField, value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessorCache", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class ProcessorCache : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticComponent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue SpeedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Level {
            get {
                return this.LevelField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelField, value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SMARTData", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components.Analyzed")]
    [System.SerializableAttribute()]
    public partial class SMARTData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SmartDataAttribute> AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstanceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PredictFailureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SmartDataAttribute> Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstanceName {
            get {
                return this.InstanceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InstanceNameField, value) != true)) {
                    this.InstanceNameField = value;
                    this.RaisePropertyChanged("InstanceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PredictFailure {
            get {
                return this.PredictFailureField;
            }
            set {
                if ((object.ReferenceEquals(this.PredictFailureField, value) != true)) {
                    this.PredictFailureField = value;
                    this.RaisePropertyChanged("PredictFailure");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Storage", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components.Analyzed")]
    [System.SerializableAttribute()]
    public partial class Storage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Disk DiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.LogicalPartition[] PartitionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Disk Disk {
            get {
                return this.DiskField;
            }
            set {
                if ((object.ReferenceEquals(this.DiskField, value) != true)) {
                    this.DiskField = value;
                    this.RaisePropertyChanged("Disk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.LogicalPartition[] Partition {
            get {
                return this.PartitionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionField, value) != true)) {
                    this.PartitionField = value;
                    this.RaisePropertyChanged("Partition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VideoController", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class VideoController : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticComponent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdapterCompatibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdapterDACTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue AdapterRAMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue CurrentBitsPerPixelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue CurrentHorizontalResolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentNumberOfColorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue CurrentRefreshRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue CurrentVerticalResolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VideoModeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VideoProcessorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdapterCompatibility {
            get {
                return this.AdapterCompatibilityField;
            }
            set {
                if ((object.ReferenceEquals(this.AdapterCompatibilityField, value) != true)) {
                    this.AdapterCompatibilityField = value;
                    this.RaisePropertyChanged("AdapterCompatibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdapterDACType {
            get {
                return this.AdapterDACTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AdapterDACTypeField, value) != true)) {
                    this.AdapterDACTypeField = value;
                    this.RaisePropertyChanged("AdapterDACType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue AdapterRAM {
            get {
                return this.AdapterRAMField;
            }
            set {
                if ((this.AdapterRAMField.Equals(value) != true)) {
                    this.AdapterRAMField = value;
                    this.RaisePropertyChanged("AdapterRAM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue CurrentBitsPerPixel {
            get {
                return this.CurrentBitsPerPixelField;
            }
            set {
                if ((this.CurrentBitsPerPixelField.Equals(value) != true)) {
                    this.CurrentBitsPerPixelField = value;
                    this.RaisePropertyChanged("CurrentBitsPerPixel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue CurrentHorizontalResolution {
            get {
                return this.CurrentHorizontalResolutionField;
            }
            set {
                if ((this.CurrentHorizontalResolutionField.Equals(value) != true)) {
                    this.CurrentHorizontalResolutionField = value;
                    this.RaisePropertyChanged("CurrentHorizontalResolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentNumberOfColors {
            get {
                return this.CurrentNumberOfColorsField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentNumberOfColorsField, value) != true)) {
                    this.CurrentNumberOfColorsField = value;
                    this.RaisePropertyChanged("CurrentNumberOfColors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue CurrentRefreshRate {
            get {
                return this.CurrentRefreshRateField;
            }
            set {
                if ((this.CurrentRefreshRateField.Equals(value) != true)) {
                    this.CurrentRefreshRateField = value;
                    this.RaisePropertyChanged("CurrentRefreshRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue CurrentVerticalResolution {
            get {
                return this.CurrentVerticalResolutionField;
            }
            set {
                if ((this.CurrentVerticalResolutionField.Equals(value) != true)) {
                    this.CurrentVerticalResolutionField = value;
                    this.RaisePropertyChanged("CurrentVerticalResolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIDField, value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverVersion {
            get {
                return this.DriverVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverVersionField, value) != true)) {
                    this.DriverVersionField = value;
                    this.RaisePropertyChanged("DriverVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoModeDescription {
            get {
                return this.VideoModeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoModeDescriptionField, value) != true)) {
                    this.VideoModeDescriptionField = value;
                    this.RaisePropertyChanged("VideoModeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoProcessor {
            get {
                return this.VideoProcessorField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoProcessorField, value) != true)) {
                    this.VideoProcessorField = value;
                    this.RaisePropertyChanged("VideoProcessor");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HardwareStaticComponent", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components.Abstract")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Battery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.CDROMDrive))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Fan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Memory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.NetworkAdapter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.PnPEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Printer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.ProcessorStatic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.ProcessorCache))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Disk))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.VideoController))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.BaseBoard))]
    public partial class HardwareStaticComponent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Disk", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class Disk : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticComponent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue AllocatedSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BootFromDiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirmwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FriendlyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HealthStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsBootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsClusteredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsOfflineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue LargestFreeExtentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue LogicalSectorSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberOfPartitionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfflineReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartitionStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PhysicalSectorSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue AllocatedSize {
            get {
                return this.AllocatedSizeField;
            }
            set {
                if ((this.AllocatedSizeField.Equals(value) != true)) {
                    this.AllocatedSizeField = value;
                    this.RaisePropertyChanged("AllocatedSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BootFromDisk {
            get {
                return this.BootFromDiskField;
            }
            set {
                if ((object.ReferenceEquals(this.BootFromDiskField, value) != true)) {
                    this.BootFromDiskField = value;
                    this.RaisePropertyChanged("BootFromDisk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusType {
            get {
                return this.BusTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusTypeField, value) != true)) {
                    this.BusTypeField = value;
                    this.RaisePropertyChanged("BusType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirmwareVersion {
            get {
                return this.FirmwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmwareVersionField, value) != true)) {
                    this.FirmwareVersionField = value;
                    this.RaisePropertyChanged("FirmwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FriendlyName {
            get {
                return this.FriendlyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendlyNameField, value) != true)) {
                    this.FriendlyNameField = value;
                    this.RaisePropertyChanged("FriendlyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HealthStatus {
            get {
                return this.HealthStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthStatusField, value) != true)) {
                    this.HealthStatusField = value;
                    this.RaisePropertyChanged("HealthStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsBoot {
            get {
                return this.IsBootField;
            }
            set {
                if ((object.ReferenceEquals(this.IsBootField, value) != true)) {
                    this.IsBootField = value;
                    this.RaisePropertyChanged("IsBoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsClustered {
            get {
                return this.IsClusteredField;
            }
            set {
                if ((object.ReferenceEquals(this.IsClusteredField, value) != true)) {
                    this.IsClusteredField = value;
                    this.RaisePropertyChanged("IsClustered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsOffline {
            get {
                return this.IsOfflineField;
            }
            set {
                if ((object.ReferenceEquals(this.IsOfflineField, value) != true)) {
                    this.IsOfflineField = value;
                    this.RaisePropertyChanged("IsOffline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((object.ReferenceEquals(this.IsReadOnlyField, value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsSystem {
            get {
                return this.IsSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSystemField, value) != true)) {
                    this.IsSystemField = value;
                    this.RaisePropertyChanged("IsSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue LargestFreeExtent {
            get {
                return this.LargestFreeExtentField;
            }
            set {
                if ((this.LargestFreeExtentField.Equals(value) != true)) {
                    this.LargestFreeExtentField = value;
                    this.RaisePropertyChanged("LargestFreeExtent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue LogicalSectorSize {
            get {
                return this.LogicalSectorSizeField;
            }
            set {
                if ((this.LogicalSectorSizeField.Equals(value) != true)) {
                    this.LogicalSectorSizeField = value;
                    this.RaisePropertyChanged("LogicalSectorSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOfPartitions {
            get {
                return this.NumberOfPartitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberOfPartitionsField, value) != true)) {
                    this.NumberOfPartitionsField = value;
                    this.RaisePropertyChanged("NumberOfPartitions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectId {
            get {
                return this.ObjectIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectIdField, value) != true)) {
                    this.ObjectIdField = value;
                    this.RaisePropertyChanged("ObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfflineReason {
            get {
                return this.OfflineReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.OfflineReasonField, value) != true)) {
                    this.OfflineReasonField = value;
                    this.RaisePropertyChanged("OfflineReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartitionStyle {
            get {
                return this.PartitionStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionStyleField, value) != true)) {
                    this.PartitionStyleField = value;
                    this.RaisePropertyChanged("PartitionStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PhysicalSectorSize {
            get {
                return this.PhysicalSectorSizeField;
            }
            set {
                if ((this.PhysicalSectorSizeField.Equals(value) != true)) {
                    this.PhysicalSectorSizeField = value;
                    this.RaisePropertyChanged("PhysicalSectorSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Signature {
            get {
                return this.SignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureField, value) != true)) {
                    this.SignatureField = value;
                    this.RaisePropertyChanged("Signature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueIdField, value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartDataAttribute", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.CustomProperties")]
    [System.SerializableAttribute()]
    public partial class SmartDataAttribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCriticalAttributeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RawField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawIdealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SmartDataAttributeStatusEnum StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ThresholdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorstField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeName {
            get {
                return this.AttributeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeNameField, value) != true)) {
                    this.AttributeNameField = value;
                    this.RaisePropertyChanged("AttributeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Current {
            get {
                return this.CurrentField;
            }
            set {
                if ((this.CurrentField.Equals(value) != true)) {
                    this.CurrentField = value;
                    this.RaisePropertyChanged("Current");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCriticalAttribute {
            get {
                return this.IsCriticalAttributeField;
            }
            set {
                if ((this.IsCriticalAttributeField.Equals(value) != true)) {
                    this.IsCriticalAttributeField = value;
                    this.RaisePropertyChanged("IsCriticalAttribute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Raw {
            get {
                return this.RawField;
            }
            set {
                if ((this.RawField.Equals(value) != true)) {
                    this.RawField = value;
                    this.RaisePropertyChanged("Raw");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawIdeal {
            get {
                return this.RawIdealField;
            }
            set {
                if ((object.ReferenceEquals(this.RawIdealField, value) != true)) {
                    this.RawIdealField = value;
                    this.RaisePropertyChanged("RawIdeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SmartDataAttributeStatusEnum Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Threshold {
            get {
                return this.ThresholdField;
            }
            set {
                if ((this.ThresholdField.Equals(value) != true)) {
                    this.ThresholdField = value;
                    this.RaisePropertyChanged("Threshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Worst {
            get {
                return this.WorstField;
            }
            set {
                if ((this.WorstField.Equals(value) != true)) {
                    this.WorstField = value;
                    this.RaisePropertyChanged("Worst");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmartDataAttributeStatusEnum", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.CustomProperties.Enums")]
    public enum SmartDataAttributeStatusEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK_THRESHOLD_NOT_REACHED = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAILED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAILED_CRITICAL = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        THRESHOLD_NOT_DEFINED = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogicalPartition", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components.Analyzed")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Partition))]
    public partial class LogicalPartition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiskNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriveLetterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsBootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsHiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsOfflineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsShadowCopyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MbrTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoDefaultDriveLetterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectIdAsPartitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue OffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartitionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.LogicalPartition[] PartitionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue SizeAsPartitionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiskId {
            get {
                return this.DiskIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DiskIdField, value) != true)) {
                    this.DiskIdField = value;
                    this.RaisePropertyChanged("DiskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiskNumber {
            get {
                return this.DiskNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DiskNumberField, value) != true)) {
                    this.DiskNumberField = value;
                    this.RaisePropertyChanged("DiskNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriveLetter {
            get {
                return this.DriveLetterField;
            }
            set {
                if ((object.ReferenceEquals(this.DriveLetterField, value) != true)) {
                    this.DriveLetterField = value;
                    this.RaisePropertyChanged("DriveLetter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsBoot {
            get {
                return this.IsBootField;
            }
            set {
                if ((object.ReferenceEquals(this.IsBootField, value) != true)) {
                    this.IsBootField = value;
                    this.RaisePropertyChanged("IsBoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsHidden {
            get {
                return this.IsHiddenField;
            }
            set {
                if ((object.ReferenceEquals(this.IsHiddenField, value) != true)) {
                    this.IsHiddenField = value;
                    this.RaisePropertyChanged("IsHidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsOffline {
            get {
                return this.IsOfflineField;
            }
            set {
                if ((object.ReferenceEquals(this.IsOfflineField, value) != true)) {
                    this.IsOfflineField = value;
                    this.RaisePropertyChanged("IsOffline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((object.ReferenceEquals(this.IsReadOnlyField, value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsShadowCopy {
            get {
                return this.IsShadowCopyField;
            }
            set {
                if ((object.ReferenceEquals(this.IsShadowCopyField, value) != true)) {
                    this.IsShadowCopyField = value;
                    this.RaisePropertyChanged("IsShadowCopy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsSystem {
            get {
                return this.IsSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSystemField, value) != true)) {
                    this.IsSystemField = value;
                    this.RaisePropertyChanged("IsSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MbrType {
            get {
                return this.MbrTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MbrTypeField, value) != true)) {
                    this.MbrTypeField = value;
                    this.RaisePropertyChanged("MbrType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoDefaultDriveLetter {
            get {
                return this.NoDefaultDriveLetterField;
            }
            set {
                if ((object.ReferenceEquals(this.NoDefaultDriveLetterField, value) != true)) {
                    this.NoDefaultDriveLetterField = value;
                    this.RaisePropertyChanged("NoDefaultDriveLetter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectIdAsPartition {
            get {
                return this.ObjectIdAsPartitionField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectIdAsPartitionField, value) != true)) {
                    this.ObjectIdAsPartitionField = value;
                    this.RaisePropertyChanged("ObjectIdAsPartition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue Offset {
            get {
                return this.OffsetField;
            }
            set {
                if ((this.OffsetField.Equals(value) != true)) {
                    this.OffsetField = value;
                    this.RaisePropertyChanged("Offset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartitionNumber {
            get {
                return this.PartitionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionNumberField, value) != true)) {
                    this.PartitionNumberField = value;
                    this.RaisePropertyChanged("PartitionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.LogicalPartition[] Partitions {
            get {
                return this.PartitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionsField, value) != true)) {
                    this.PartitionsField = value;
                    this.RaisePropertyChanged("Partitions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue SizeAsPartition {
            get {
                return this.SizeAsPartitionField;
            }
            set {
                if ((this.SizeAsPartitionField.Equals(value) != true)) {
                    this.SizeAsPartitionField = value;
                    this.RaisePropertyChanged("SizeAsPartition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Partition", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.Components.Analyzed")]
    [System.SerializableAttribute()]
    public partial class Partition : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.LogicalPartition {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DedupModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriveTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileSystemLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HealthStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectIdAsVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue SizeAsVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue SizeRemainingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DedupMode {
            get {
                return this.DedupModeField;
            }
            set {
                if ((object.ReferenceEquals(this.DedupModeField, value) != true)) {
                    this.DedupModeField = value;
                    this.RaisePropertyChanged("DedupMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriveType {
            get {
                return this.DriveTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DriveTypeField, value) != true)) {
                    this.DriveTypeField = value;
                    this.RaisePropertyChanged("DriveType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileSystem {
            get {
                return this.FileSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.FileSystemField, value) != true)) {
                    this.FileSystemField = value;
                    this.RaisePropertyChanged("FileSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileSystemLabel {
            get {
                return this.FileSystemLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.FileSystemLabelField, value) != true)) {
                    this.FileSystemLabelField = value;
                    this.RaisePropertyChanged("FileSystemLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HealthStatus {
            get {
                return this.HealthStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthStatusField, value) != true)) {
                    this.HealthStatusField = value;
                    this.RaisePropertyChanged("HealthStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectIdAsVolume {
            get {
                return this.ObjectIdAsVolumeField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectIdAsVolumeField, value) != true)) {
                    this.ObjectIdAsVolumeField = value;
                    this.RaisePropertyChanged("ObjectIdAsVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue SizeAsVolume {
            get {
                return this.SizeAsVolumeField;
            }
            set {
                if ((this.SizeAsVolumeField.Equals(value) != true)) {
                    this.SizeAsVolumeField = value;
                    this.RaisePropertyChanged("SizeAsVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue SizeRemaining {
            get {
                return this.SizeRemainingField;
            }
            set {
                if ((this.SizeRemainingField.Equals(value) != true)) {
                    this.SizeRemainingField = value;
                    this.RaisePropertyChanged("SizeRemaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueIdField, value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WorkstationMonitorServiceReference.IWorkstationMonitorService")]
    public interface IWorkstationMonitorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareDynamicData", ReplyAction="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareDynamicDataResponse")]
        SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareDynamicData ReadSoftwareDynamicData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareDynamicData", ReplyAction="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareDynamicDataResponse")]
        System.Threading.Tasks.Task<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareDynamicData> ReadSoftwareDynamicDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareStaticData", ReplyAction="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareStaticDataResponse")]
        SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareStaticData ReadSoftwareStaticData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareStaticData", ReplyAction="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareStaticDataResponse")]
        System.Threading.Tasks.Task<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareStaticData> ReadSoftwareStaticDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/ReadHardwareDynamicData", ReplyAction="http://tempuri.org/IWorkstationMonitorService/ReadHardwareDynamicDataResponse")]
        SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareDynamicData ReadHardwareDynamicData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/ReadHardwareDynamicData", ReplyAction="http://tempuri.org/IWorkstationMonitorService/ReadHardwareDynamicDataResponse")]
        System.Threading.Tasks.Task<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareDynamicData> ReadHardwareDynamicDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/ReadHardwareStaticData", ReplyAction="http://tempuri.org/IWorkstationMonitorService/ReadHardwareStaticDataResponse")]
        SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticData ReadHardwareStaticData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/ReadHardwareStaticData", ReplyAction="http://tempuri.org/IWorkstationMonitorService/ReadHardwareStaticDataResponse")]
        System.Threading.Tasks.Task<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticData> ReadHardwareStaticDataAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWorkstationMonitorServiceChannel : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.IWorkstationMonitorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkstationMonitorServiceClient : System.ServiceModel.ClientBase<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.IWorkstationMonitorService>, SystemManagament.Client.WPF.WorkstationMonitorServiceReference.IWorkstationMonitorService {
        
        public WorkstationMonitorServiceClient() {
        }
        
        public WorkstationMonitorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WorkstationMonitorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkstationMonitorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkstationMonitorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareDynamicData ReadSoftwareDynamicData() {
            return base.Channel.ReadSoftwareDynamicData();
        }
        
        public System.Threading.Tasks.Task<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareDynamicData> ReadSoftwareDynamicDataAsync() {
            return base.Channel.ReadSoftwareDynamicDataAsync();
        }
        
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareStaticData ReadSoftwareStaticData() {
            return base.Channel.ReadSoftwareStaticData();
        }
        
        public System.Threading.Tasks.Task<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareStaticData> ReadSoftwareStaticDataAsync() {
            return base.Channel.ReadSoftwareStaticDataAsync();
        }
        
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareDynamicData ReadHardwareDynamicData() {
            return base.Channel.ReadHardwareDynamicData();
        }
        
        public System.Threading.Tasks.Task<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareDynamicData> ReadHardwareDynamicDataAsync() {
            return base.Channel.ReadHardwareDynamicDataAsync();
        }
        
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticData ReadHardwareStaticData() {
            return base.Channel.ReadHardwareStaticData();
        }
        
        public System.Threading.Tasks.Task<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.HardwareStaticData> ReadHardwareStaticDataAsync() {
            return base.Channel.ReadHardwareStaticDataAsync();
        }
    }
}
