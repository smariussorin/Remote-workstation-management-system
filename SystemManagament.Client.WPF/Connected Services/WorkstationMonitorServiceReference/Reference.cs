//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SystemManagament.Client.WPF.WorkstationMonitorServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoftwareDynamicData", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareDynamic." +
        "Model")]
    [System.SerializableAttribute()]
    public partial class SoftwareDynamicData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsLog[] WindowsLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsProcess[] WindowsProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsService[] WindowsServiceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsLog[] WindowsLog {
            get {
                return this.WindowsLogField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowsLogField, value) != true)) {
                    this.WindowsLogField = value;
                    this.RaisePropertyChanged("WindowsLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsProcess[] WindowsProcess {
            get {
                return this.WindowsProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowsProcessField, value) != true)) {
                    this.WindowsProcessField = value;
                    this.RaisePropertyChanged("WindowsProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsService[] WindowsService {
            get {
                return this.WindowsServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowsServiceField, value) != true)) {
                    this.WindowsServiceField = value;
                    this.RaisePropertyChanged("WindowsService");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowsLog", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareDynamic." +
        "Model.Components")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareStaticData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareDynamicData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Security.Claims.Claim[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Security.Claims.Claim))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Bios[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Bios))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.CurrentUser[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.CurrentUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.InstalledProgram[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.InstalledProgram))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.LocalUser[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.LocalUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.MicrosoftWindowsUpdate[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.MicrosoftWindowsUpdate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.OS[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.OS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.StartupCommand[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.StartupCommand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsLog[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsProcess[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsProcess))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsService[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SystemManagament.Client.WPF.WorkstationMonitorServiceReference.WindowsService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Security.Principal.IdentityReference[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Security.Principal.IdentityReference))]
    public partial class WindowsLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] EntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogDisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MaximumKilobytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MinimumRetentionDaysField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntriesField, value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogDisplayName {
            get {
                return this.LogDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogDisplayNameField, value) != true)) {
                    this.LogDisplayNameField = value;
                    this.RaisePropertyChanged("LogDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogName {
            get {
                return this.LogNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogNameField, value) != true)) {
                    this.LogNameField = value;
                    this.RaisePropertyChanged("LogName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MaximumKilobytes {
            get {
                return this.MaximumKilobytesField;
            }
            set {
                if ((this.MaximumKilobytesField.Equals(value) != true)) {
                    this.MaximumKilobytesField = value;
                    this.RaisePropertyChanged("MaximumKilobytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MinimumRetentionDays {
            get {
                return this.MinimumRetentionDaysField;
            }
            set {
                if ((this.MinimumRetentionDaysField.Equals(value) != true)) {
                    this.MinimumRetentionDaysField = value;
                    this.RaisePropertyChanged("MinimumRetentionDays");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowsProcess", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareDynamic." +
        "Model.Components")]
    [System.SerializableAttribute()]
    public partial class WindowsProcess : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BasePriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MemorySizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PagedMemorySize64Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PeakMemorySizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PeakPagedMemorySize64Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PeakVirtualMemorySize64Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TotalProcessorTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue VirtualMemorySize64Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BasePriority {
            get {
                return this.BasePriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.BasePriorityField, value) != true)) {
                    this.BasePriorityField = value;
                    this.RaisePropertyChanged("BasePriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MemorySize {
            get {
                return this.MemorySizeField;
            }
            set {
                if ((this.MemorySizeField.Equals(value) != true)) {
                    this.MemorySizeField = value;
                    this.RaisePropertyChanged("MemorySize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PagedMemorySize64 {
            get {
                return this.PagedMemorySize64Field;
            }
            set {
                if ((this.PagedMemorySize64Field.Equals(value) != true)) {
                    this.PagedMemorySize64Field = value;
                    this.RaisePropertyChanged("PagedMemorySize64");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PeakMemorySize {
            get {
                return this.PeakMemorySizeField;
            }
            set {
                if ((this.PeakMemorySizeField.Equals(value) != true)) {
                    this.PeakMemorySizeField = value;
                    this.RaisePropertyChanged("PeakMemorySize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PeakPagedMemorySize64 {
            get {
                return this.PeakPagedMemorySize64Field;
            }
            set {
                if ((this.PeakPagedMemorySize64Field.Equals(value) != true)) {
                    this.PeakPagedMemorySize64Field = value;
                    this.RaisePropertyChanged("PeakPagedMemorySize64");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue PeakVirtualMemorySize64 {
            get {
                return this.PeakVirtualMemorySize64Field;
            }
            set {
                if ((this.PeakVirtualMemorySize64Field.Equals(value) != true)) {
                    this.PeakVirtualMemorySize64Field = value;
                    this.RaisePropertyChanged("PeakVirtualMemorySize64");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TotalProcessorTime {
            get {
                return this.TotalProcessorTimeField;
            }
            set {
                if ((this.TotalProcessorTimeField.Equals(value) != true)) {
                    this.TotalProcessorTimeField = value;
                    this.RaisePropertyChanged("TotalProcessorTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue VirtualMemorySize64 {
            get {
                return this.VirtualMemorySize64Field;
            }
            set {
                if ((this.VirtualMemorySize64Field.Equals(value) != true)) {
                    this.VirtualMemorySize64Field = value;
                    this.RaisePropertyChanged("VirtualMemorySize64");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowsService", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareDynamic." +
        "Model.Components")]
    [System.SerializableAttribute()]
    public partial class WindowsService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CanPauseAndContinueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CanShutdownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CanStopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CanPauseAndContinue {
            get {
                return this.CanPauseAndContinueField;
            }
            set {
                if ((object.ReferenceEquals(this.CanPauseAndContinueField, value) != true)) {
                    this.CanPauseAndContinueField = value;
                    this.RaisePropertyChanged("CanPauseAndContinue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CanShutdown {
            get {
                return this.CanShutdownField;
            }
            set {
                if ((object.ReferenceEquals(this.CanShutdownField, value) != true)) {
                    this.CanShutdownField = value;
                    this.RaisePropertyChanged("CanShutdown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CanStop {
            get {
                return this.CanStopField;
            }
            set {
                if ((object.ReferenceEquals(this.CanStopField, value) != true)) {
                    this.CanStopField = value;
                    this.RaisePropertyChanged("CanStop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeField, value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartType {
            get {
                return this.StartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTypeField, value) != true)) {
                    this.StartTypeField = value;
                    this.RaisePropertyChanged("StartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitValue", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.HardwareStatic.M" +
        "odel.CustomProperties")]
    [System.SerializableAttribute()]
    public partial struct UnitValue : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoftwareStaticData", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel")]
    [System.SerializableAttribute()]
    public partial class SoftwareStaticData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Bios[] BiosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.CurrentUser[] CurrentUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.InstalledProgram[] InstalledProgramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.LocalUser[] LocalUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.MicrosoftWindowsUpdate[] MicrosoftWindowsUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.OS[] OperatingSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.StartupCommand[] StartupCommandField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.Bios[] Bios {
            get {
                return this.BiosField;
            }
            set {
                if ((object.ReferenceEquals(this.BiosField, value) != true)) {
                    this.BiosField = value;
                    this.RaisePropertyChanged("Bios");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.CurrentUser[] CurrentUser {
            get {
                return this.CurrentUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentUserField, value) != true)) {
                    this.CurrentUserField = value;
                    this.RaisePropertyChanged("CurrentUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.InstalledProgram[] InstalledProgram {
            get {
                return this.InstalledProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.InstalledProgramField, value) != true)) {
                    this.InstalledProgramField = value;
                    this.RaisePropertyChanged("InstalledProgram");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.LocalUser[] LocalUser {
            get {
                return this.LocalUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalUserField, value) != true)) {
                    this.LocalUserField = value;
                    this.RaisePropertyChanged("LocalUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.MicrosoftWindowsUpdate[] MicrosoftWindowsUpdate {
            get {
                return this.MicrosoftWindowsUpdateField;
            }
            set {
                if ((object.ReferenceEquals(this.MicrosoftWindowsUpdateField, value) != true)) {
                    this.MicrosoftWindowsUpdateField = value;
                    this.RaisePropertyChanged("MicrosoftWindowsUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.OS[] OperatingSystem {
            get {
                return this.OperatingSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatingSystemField, value) != true)) {
                    this.OperatingSystemField = value;
                    this.RaisePropertyChanged("OperatingSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.StartupCommand[] StartupCommand {
            get {
                return this.StartupCommandField;
            }
            set {
                if ((object.ReferenceEquals(this.StartupCommandField, value) != true)) {
                    this.StartupCommandField = value;
                    this.RaisePropertyChanged("StartupCommand");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bios", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class Bios : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BIOSVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmbeddedControllerMajorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmbeddedControllerMinorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SMBIOSBIOSVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SMBIOSMajorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SMBIOSMinorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SMBIOSPresentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemBiosMajorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemBiosMinorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BIOSVersion {
            get {
                return this.BIOSVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.BIOSVersionField, value) != true)) {
                    this.BIOSVersionField = value;
                    this.RaisePropertyChanged("BIOSVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildNumber {
            get {
                return this.BuildNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildNumberField, value) != true)) {
                    this.BuildNumberField = value;
                    this.RaisePropertyChanged("BuildNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmbeddedControllerMajorVersion {
            get {
                return this.EmbeddedControllerMajorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.EmbeddedControllerMajorVersionField, value) != true)) {
                    this.EmbeddedControllerMajorVersionField = value;
                    this.RaisePropertyChanged("EmbeddedControllerMajorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmbeddedControllerMinorVersion {
            get {
                return this.EmbeddedControllerMinorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.EmbeddedControllerMinorVersionField, value) != true)) {
                    this.EmbeddedControllerMinorVersionField = value;
                    this.RaisePropertyChanged("EmbeddedControllerMinorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMBIOSBIOSVersion {
            get {
                return this.SMBIOSBIOSVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SMBIOSBIOSVersionField, value) != true)) {
                    this.SMBIOSBIOSVersionField = value;
                    this.RaisePropertyChanged("SMBIOSBIOSVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMBIOSMajorVersion {
            get {
                return this.SMBIOSMajorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SMBIOSMajorVersionField, value) != true)) {
                    this.SMBIOSMajorVersionField = value;
                    this.RaisePropertyChanged("SMBIOSMajorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMBIOSMinorVersion {
            get {
                return this.SMBIOSMinorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SMBIOSMinorVersionField, value) != true)) {
                    this.SMBIOSMinorVersionField = value;
                    this.RaisePropertyChanged("SMBIOSMinorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMBIOSPresent {
            get {
                return this.SMBIOSPresentField;
            }
            set {
                if ((object.ReferenceEquals(this.SMBIOSPresentField, value) != true)) {
                    this.SMBIOSPresentField = value;
                    this.RaisePropertyChanged("SMBIOSPresent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemBiosMajorVersion {
            get {
                return this.SystemBiosMajorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemBiosMajorVersionField, value) != true)) {
                    this.SystemBiosMajorVersionField = value;
                    this.RaisePropertyChanged("SystemBiosMajorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemBiosMinorVersion {
            get {
                return this.SystemBiosMinorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemBiosMinorVersionField, value) != true)) {
                    this.SystemBiosMinorVersionField = value;
                    this.RaisePropertyChanged("SystemBiosMinorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrentUser", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class CurrentUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthenticationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Security.Claims.Claim[] ClaimsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Security.Principal.IdentityReference[] GroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthenticationType {
            get {
                return this.AuthenticationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticationTypeField, value) != true)) {
                    this.AuthenticationTypeField = value;
                    this.RaisePropertyChanged("AuthenticationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Security.Claims.Claim[] Claims {
            get {
                return this.ClaimsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimsField, value) != true)) {
                    this.ClaimsField = value;
                    this.RaisePropertyChanged("Claims");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Security.Principal.IdentityReference[] Groups {
            get {
                return this.GroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupsField, value) != true)) {
                    this.GroupsField = value;
                    this.RaisePropertyChanged("Groups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstalledProgram", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class InstalledProgram : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InstallDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InstallDate {
            get {
                return this.InstallDateField;
            }
            set {
                if ((this.InstallDateField.Equals(value) != true)) {
                    this.InstallDateField = value;
                    this.RaisePropertyChanged("InstallDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallLocation {
            get {
                return this.InstallLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallLocationField, value) != true)) {
                    this.InstallLocationField = value;
                    this.RaisePropertyChanged("InstallLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalUser", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class LocalUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescritptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordChangeableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordExpiresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SIDTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descritption {
            get {
                return this.DescritptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescritptionField, value) != true)) {
                    this.DescritptionField = value;
                    this.RaisePropertyChanged("Descritption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordChangeable {
            get {
                return this.PasswordChangeableField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordChangeableField, value) != true)) {
                    this.PasswordChangeableField = value;
                    this.RaisePropertyChanged("PasswordChangeable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordExpires {
            get {
                return this.PasswordExpiresField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordExpiresField, value) != true)) {
                    this.PasswordExpiresField = value;
                    this.RaisePropertyChanged("PasswordExpires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordRequired {
            get {
                return this.PasswordRequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordRequiredField, value) != true)) {
                    this.PasswordRequiredField = value;
                    this.RaisePropertyChanged("PasswordRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SID {
            get {
                return this.SIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SIDField, value) != true)) {
                    this.SIDField = value;
                    this.RaisePropertyChanged("SID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SIDType {
            get {
                return this.SIDTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SIDTypeField, value) != true)) {
                    this.SIDTypeField = value;
                    this.RaisePropertyChanged("SIDType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MicrosoftWindowsUpdate", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class MicrosoftWindowsUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FixCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HotFixIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InstallDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstalledByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InstalledOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServicePackInEffectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSName {
            get {
                return this.CSNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CSNameField, value) != true)) {
                    this.CSNameField = value;
                    this.RaisePropertyChanged("CSName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FixComments {
            get {
                return this.FixCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.FixCommentsField, value) != true)) {
                    this.FixCommentsField = value;
                    this.RaisePropertyChanged("FixComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HotFixID {
            get {
                return this.HotFixIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HotFixIDField, value) != true)) {
                    this.HotFixIDField = value;
                    this.RaisePropertyChanged("HotFixID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InstallDate {
            get {
                return this.InstallDateField;
            }
            set {
                if ((this.InstallDateField.Equals(value) != true)) {
                    this.InstallDateField = value;
                    this.RaisePropertyChanged("InstallDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstalledBy {
            get {
                return this.InstalledByField;
            }
            set {
                if ((object.ReferenceEquals(this.InstalledByField, value) != true)) {
                    this.InstalledByField = value;
                    this.RaisePropertyChanged("InstalledBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InstalledOn {
            get {
                return this.InstalledOnField;
            }
            set {
                if ((this.InstalledOnField.Equals(value) != true)) {
                    this.InstalledOnField = value;
                    this.RaisePropertyChanged("InstalledOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServicePackInEffect {
            get {
                return this.ServicePackInEffectField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicePackInEffectField, value) != true)) {
                    this.ServicePackInEffectField = value;
                    this.RaisePropertyChanged("ServicePackInEffect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OS", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class OS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CDSVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue CurrentTimeZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue EncryptionLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InstallDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastBootUpTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LocalDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaxNumerOfProcessesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MaxProcessMemorySizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OSArchitectureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegisteredUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServicePackMajorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServicePackMinorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemDirectoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemDriveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindowsDirectoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildNumber {
            get {
                return this.BuildNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildNumberField, value) != true)) {
                    this.BuildNumberField = value;
                    this.RaisePropertyChanged("BuildNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildType {
            get {
                return this.BuildTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildTypeField, value) != true)) {
                    this.BuildTypeField = value;
                    this.RaisePropertyChanged("BuildType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CDSVersion {
            get {
                return this.CDSVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CDSVersionField, value) != true)) {
                    this.CDSVersionField = value;
                    this.RaisePropertyChanged("CDSVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSName {
            get {
                return this.CSNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CSNameField, value) != true)) {
                    this.CSNameField = value;
                    this.RaisePropertyChanged("CSName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue CurrentTimeZone {
            get {
                return this.CurrentTimeZoneField;
            }
            set {
                if ((this.CurrentTimeZoneField.Equals(value) != true)) {
                    this.CurrentTimeZoneField = value;
                    this.RaisePropertyChanged("CurrentTimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue EncryptionLevel {
            get {
                return this.EncryptionLevelField;
            }
            set {
                if ((this.EncryptionLevelField.Equals(value) != true)) {
                    this.EncryptionLevelField = value;
                    this.RaisePropertyChanged("EncryptionLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InstallDate {
            get {
                return this.InstallDateField;
            }
            set {
                if ((this.InstallDateField.Equals(value) != true)) {
                    this.InstallDateField = value;
                    this.RaisePropertyChanged("InstallDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastBootUpTime {
            get {
                return this.LastBootUpTimeField;
            }
            set {
                if ((this.LastBootUpTimeField.Equals(value) != true)) {
                    this.LastBootUpTimeField = value;
                    this.RaisePropertyChanged("LastBootUpTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LocalDateTime {
            get {
                return this.LocalDateTimeField;
            }
            set {
                if ((this.LocalDateTimeField.Equals(value) != true)) {
                    this.LocalDateTimeField = value;
                    this.RaisePropertyChanged("LocalDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locale {
            get {
                return this.LocaleField;
            }
            set {
                if ((object.ReferenceEquals(this.LocaleField, value) != true)) {
                    this.LocaleField = value;
                    this.RaisePropertyChanged("Locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxNumerOfProcesses {
            get {
                return this.MaxNumerOfProcessesField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxNumerOfProcessesField, value) != true)) {
                    this.MaxNumerOfProcessesField = value;
                    this.RaisePropertyChanged("MaxNumerOfProcesses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.UnitValue MaxProcessMemorySize {
            get {
                return this.MaxProcessMemorySizeField;
            }
            set {
                if ((this.MaxProcessMemorySizeField.Equals(value) != true)) {
                    this.MaxProcessMemorySizeField = value;
                    this.RaisePropertyChanged("MaxProcessMemorySize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OSArchitecture {
            get {
                return this.OSArchitectureField;
            }
            set {
                if ((object.ReferenceEquals(this.OSArchitectureField, value) != true)) {
                    this.OSArchitectureField = value;
                    this.RaisePropertyChanged("OSArchitecture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organization {
            get {
                return this.OrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationField, value) != true)) {
                    this.OrganizationField = value;
                    this.RaisePropertyChanged("Organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegisteredUser {
            get {
                return this.RegisteredUserField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisteredUserField, value) != true)) {
                    this.RegisteredUserField = value;
                    this.RaisePropertyChanged("RegisteredUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServicePackMajorVersion {
            get {
                return this.ServicePackMajorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicePackMajorVersionField, value) != true)) {
                    this.ServicePackMajorVersionField = value;
                    this.RaisePropertyChanged("ServicePackMajorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServicePackMinorVersion {
            get {
                return this.ServicePackMinorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicePackMinorVersionField, value) != true)) {
                    this.ServicePackMinorVersionField = value;
                    this.RaisePropertyChanged("ServicePackMinorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemDirectory {
            get {
                return this.SystemDirectoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemDirectoryField, value) != true)) {
                    this.SystemDirectoryField = value;
                    this.RaisePropertyChanged("SystemDirectory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemDrive {
            get {
                return this.SystemDriveField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemDriveField, value) != true)) {
                    this.SystemDriveField = value;
                    this.RaisePropertyChanged("SystemDrive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindowsDirectory {
            get {
                return this.WindowsDirectoryField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowsDirectoryField, value) != true)) {
                    this.WindowsDirectoryField = value;
                    this.RaisePropertyChanged("WindowsDirectory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StartupCommand", Namespace="http://schemas.datacontract.org/2004/07/SystemManagament.Monitor.SoftwareStatic.M" +
        "odel.Components")]
    [System.SerializableAttribute()]
    public partial class StartupCommand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SettingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserSIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Command {
            get {
                return this.CommandField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandField, value) != true)) {
                    this.CommandField = value;
                    this.RaisePropertyChanged("Command");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettingID {
            get {
                return this.SettingIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingIDField, value) != true)) {
                    this.SettingIDField = value;
                    this.RaisePropertyChanged("SettingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserSID {
            get {
                return this.UserSIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSIDField, value) != true)) {
                    this.UserSIDField = value;
                    this.RaisePropertyChanged("UserSID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WorkstationMonitorServiceReference.IWorkstationMonitorService")]
    public interface IWorkstationMonitorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/Add", ReplyAction="http://tempuri.org/IWorkstationMonitorService/AddResponse")]
        double Add(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/Add", ReplyAction="http://tempuri.org/IWorkstationMonitorService/AddResponse")]
        System.Threading.Tasks.Task<double> AddAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/Subtract", ReplyAction="http://tempuri.org/IWorkstationMonitorService/SubtractResponse")]
        double Subtract(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/Subtract", ReplyAction="http://tempuri.org/IWorkstationMonitorService/SubtractResponse")]
        System.Threading.Tasks.Task<double> SubtractAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/Multiply", ReplyAction="http://tempuri.org/IWorkstationMonitorService/MultiplyResponse")]
        double Multiply(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/Multiply", ReplyAction="http://tempuri.org/IWorkstationMonitorService/MultiplyResponse")]
        System.Threading.Tasks.Task<double> MultiplyAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/Divide", ReplyAction="http://tempuri.org/IWorkstationMonitorService/DivideResponse")]
        double Divide(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/Divide", ReplyAction="http://tempuri.org/IWorkstationMonitorService/DivideResponse")]
        System.Threading.Tasks.Task<double> DivideAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareDynamicData", ReplyAction="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareDynamicDataResponse")]
        SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareDynamicData ReadSoftwareDynamicData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareDynamicData", ReplyAction="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareDynamicDataResponse")]
        System.Threading.Tasks.Task<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareDynamicData> ReadSoftwareDynamicDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareStaticData", ReplyAction="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareStaticDataResponse")]
        SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareStaticData ReadSoftwareStaticData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareStaticData", ReplyAction="http://tempuri.org/IWorkstationMonitorService/ReadSoftwareStaticDataResponse")]
        System.Threading.Tasks.Task<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareStaticData> ReadSoftwareStaticDataAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWorkstationMonitorServiceChannel : SystemManagament.Client.WPF.WorkstationMonitorServiceReference.IWorkstationMonitorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkstationMonitorServiceClient : System.ServiceModel.ClientBase<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.IWorkstationMonitorService>, SystemManagament.Client.WPF.WorkstationMonitorServiceReference.IWorkstationMonitorService {
        
        public WorkstationMonitorServiceClient() {
        }
        
        public WorkstationMonitorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WorkstationMonitorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkstationMonitorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkstationMonitorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Add(double n1, double n2) {
            return base.Channel.Add(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> AddAsync(double n1, double n2) {
            return base.Channel.AddAsync(n1, n2);
        }
        
        public double Subtract(double n1, double n2) {
            return base.Channel.Subtract(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> SubtractAsync(double n1, double n2) {
            return base.Channel.SubtractAsync(n1, n2);
        }
        
        public double Multiply(double n1, double n2) {
            return base.Channel.Multiply(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> MultiplyAsync(double n1, double n2) {
            return base.Channel.MultiplyAsync(n1, n2);
        }
        
        public double Divide(double n1, double n2) {
            return base.Channel.Divide(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> DivideAsync(double n1, double n2) {
            return base.Channel.DivideAsync(n1, n2);
        }
        
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareDynamicData ReadSoftwareDynamicData() {
            return base.Channel.ReadSoftwareDynamicData();
        }
        
        public System.Threading.Tasks.Task<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareDynamicData> ReadSoftwareDynamicDataAsync() {
            return base.Channel.ReadSoftwareDynamicDataAsync();
        }
        
        public SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareStaticData ReadSoftwareStaticData() {
            return base.Channel.ReadSoftwareStaticData();
        }
        
        public System.Threading.Tasks.Task<SystemManagament.Client.WPF.WorkstationMonitorServiceReference.SoftwareStaticData> ReadSoftwareStaticDataAsync() {
            return base.Channel.ReadSoftwareStaticDataAsync();
        }
    }
}
