<Application x:Class="SystemManagament.Client.WPF.App" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:local="clr-namespace:SystemManagament.Client.WPF" 
             StartupUri="MainWindow.xaml" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             d1p1:Ignorable="d" 
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz">
    <Application.Resources>

        <ResourceDictionary>
            <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" xmlns:vm="clr-namespace:SystemManagament.Client.WPF.ViewModel" />

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Expander.xaml" />

                <!-- primary color -->
                <ResourceDictionary>
                    <!-- include your primary palette -->
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Teal.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <!--
                        include three hues from the primary palette (and the associated forecolours).
                        Do not rename, keep in sequence; light to dark.
                        -->
                    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}"/>
                    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}"/>
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}"/>
                    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary700}"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary700Foreground}"/>

                    <!-- MAHAPPS BRUSHES -->
                    <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource Primary700}" />
                    <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource Primary500}" />
                    <SolidColorBrush x:Key="AccentColorBrush2" Color="{StaticResource Primary400}" />
                    <SolidColorBrush x:Key="AccentColorBrush3" Color="{StaticResource Primary300}" />
                    <SolidColorBrush x:Key="AccentColorBrush4" Color="{StaticResource Primary200}" />
                    <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{StaticResource Primary700}"/>
                    <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="{StaticResource Primary500Foreground}" />

                    <LinearGradientBrush x:Key="ProgressBrush" EndPoint="0.001,0.5" StartPoint="1.002,0.5">
                        <GradientStop Color="{StaticResource Primary700}" Offset="0" />
                        <GradientStop Color="{StaticResource Primary300}" Offset="1" />
                    </LinearGradientBrush>
                    <SolidColorBrush x:Key="CheckmarkFill" Color="{StaticResource Primary500}" />
                    <SolidColorBrush x:Key="RightArrowFill" Color="{StaticResource Primary500}" />
                    <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{StaticResource Primary500Foreground}" />
                    <SolidColorBrush x:Key="IdealForegroundDisabledBrush" Color="{StaticResource Primary500}" Opacity="0.4" />

                </ResourceDictionary>

                <!-- secondary colour -->
                <ResourceDictionary>
                    <!-- include your secondary pallette -->
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Orange.xaml" />
                    </ResourceDictionary.MergedDictionaries>

                    <!-- include a single secondary accent color (and the associated forecolour) -->
                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="{StaticResource Accent200}"/>
                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="{StaticResource Accent200Foreground}"/>
                    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource MaterialDesignDataGrid}">
                        <Setter Property="IsReadOnly" Value="True" />
                        <Setter Property="SelectionMode" Value="Single" />
                        <Setter Property="ClipboardCopyMode" Value="IncludeHeader" />
                        <Setter Property="CanUserAddRows" Value="False" />
                        <Setter Property="CanUserDeleteRows" Value="False" />
                        <Setter Property="AutoGenerateColumns" Value="False" />
                        <Setter Property="ColumnWidth" Value="*" />
                        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
                        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                        <Setter Property="MaxHeight" Value="500" />
                        <Setter Property="HorizontalGridLinesBrush" Value="White" />
                        <Setter Property="VerticalGridLinesBrush" Value="White" />
                        <Setter Property="GridLinesVisibility" Value="All" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                    </Style>
                    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                        <Setter Property="FontWeight"  Value="Bold" />
                        <Setter Property="FontSize"  Value="12" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="SeparatorVisibility" Value="Visible" />
                        <Setter Property="SeparatorBrush" Value="White" />
                        <Setter Property="BorderBrush" Value="White" />
                        <Setter Property="BorderThickness" Value="2" />
                        <!-- Add when bug in material design will be resolved -->
                        <!--<Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>-->
                    </Style>
                    <Style x:Key="WrappedColumnCellStyle" TargetType="{x:Type TextBlock}">
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="FontSize" Value="10"/>
                    </Style>
                </ResourceDictionary>

                <!-- Include the Dragablz Material Design style -->
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/materialdesign.xaml"/>

                <ResourceDictionary>
                    <!--<Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MaterialDesignTabablzControlStyle}">
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="{x:Type dragablz:DragablzItem}" BasedOn="{StaticResource MaterialDesignDragableTabItemVerticalStyle}">
                                    <Setter Property="Width" Value="130" />
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>-->
                    <Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MaterialDesignTabablzControlStyle}"/>
                </ResourceDictionary>


                <!-- LIVE CHARTS -->

                <!--Select colors set, options are material, metro, blue, white and black-->

                <!--Material design colors-->
                <ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Colors/material.xaml" />
                <!--Metro colors-->
                <!--<ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Colors/metro.xaml" />-->
                <!--Blue gradient-->
                <!--<ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Colors/blue.xaml" />-->
                <!--white gradient-->
                <!--<ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Colors/white.xaml" />-->
                <!--black gradient-->
                <!--<ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Colors/black.xaml" />-->

                <!--Select size, options are small, medium and large-->

                <!--small-->
                <!--<ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Size/s.xaml" />-->
                <!--medium-->
                <ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Size/m.xaml" />
                <!--large-->
                <!--<ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Size/l.xaml" />-->

                <!--Select weight, options are light, normal and bold-->
                <!--light-->
                <!--<ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Weight/light.xaml" />-->
                <!--normal-->
                <ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Weight/normal.xaml" />
                <!--bold-->
                <!--<ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/Weight/bold.xaml" />-->

                <!--Also add the base theme, this is required always-->
                <ResourceDictionary Source="pack://application:,,,/LiveCharts.Wpf;component/Themes/base.xaml" />
                <!-- LIVE CHARTS END-->
                
                
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
        
    </Application.Resources>
    
</Application>